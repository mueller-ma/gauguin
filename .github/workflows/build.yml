name: Build
on:
  push:
    branches:
      - main
      - github-action-caching
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - uses: burrunan/gradle-cache-action@v1
        name: Build and analyze
        # Extra environment variables for Gradle execution (regular GitHub Actions feature)
        # Note: env must be outside of "with"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # If you have multiple jobs, use distinct job-id in in case you want to split caches
          # For instance, jobs with different JDK versions can't share caches
          # RUNNER_OS is added to job-id automatically
          job-id: jdk8
          # Specifies arguments for Gradle execution
          # If arguments is missing or empty, then Gradle is not executed
          arguments: build test jacocoTestReport sonar --info -Pbuildserver
          # arguments can be multi-line for better readability
          # arguments: |
          #  --no-paralell
          #  build
          #  -x test
          # Gradle version to use for execution:
          #   wrapper (default), current, rc, nightly, release-nightly, or
          #   versions like 6.6 (see https://services.gradle.org/versions/all)
          gradle-version: wrapper
          # Properties are passed as -Pname=value
          properties: |
            kotlin.js.compiler=ir
            kotlin.parallel.tasks.in.project=true
